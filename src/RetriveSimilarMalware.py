#  <#Title#>

import numpy as np
from sklearn.metrics.pairwise import linear_kernel
from pyLZJD import digest, sim
import json
import sys
import pickle
if __name__ == '__main__':

    def findmostsimilarFiles(newfile,tdm,count):
        cosine_similarities = linear_kernel(newfile, tdm).flatten()
        related_product_indices = cosine_similarities.argsort()[:-1*(count+1):-1]
        return related_product_indices
        
    def findDigest(file):
        return digest(file,processes=-1)[0]
        
    # Read list to memory
    def read_list(file):
        # for reading also binary mode is important
        with open(file, 'rb') as fp:
            n_list = pickle.load(fp)
            return n_list
    def createtdm(tokens,tokenidx):
        newColumn=[False]*len(tokenidx)
        for i in tokens:
            if str(i) in tokenidx:
                newColumn[tokenidx[str(i)]]=True
        return newColumn
           
    inputtdm=sys.argv[1]
    newFile=sys.argv[2]
    count=int(sys.argv[3])
    CSVData = open(inputtdm)
    tdm= np.loadtxt(CSVData, delimiter=",")
    filelist=read_list('listfile')
    tokens=tuple(findDigest(newFile))
    tokenidx=json.load(open("tokenIndex.json"))
    
  
    newColumn=createtdm(tokens,tokenidx)
    related_product_indices=findmostsimilarFiles(np.array(newColumn).reshape(1,-1),tdm,count)
    final_output=[filelist[i] for i in related_product_indices]
    #print(filelist)
    print(final_output)
    print(related_product_indices)
    
